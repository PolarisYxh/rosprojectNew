<?xml version="1.0" encoding="utf-8"?>
<!-- This URDF was automatically created by SolidWorks to URDF Exporter! Originally created by Stephen Brawner (brawner@gmail.com)
     Commit Version: 1.5.1-0-g916b5db  Build Version: 1.5.7152.31018
     For more information, please see http://wiki.ros.org/sw_urdf_exporter -->
<robot xmlns:xacro="http://www.ros.org/wiki/xacro" name="fly_camera">
  <link name="base_footprint">
        <visual>
            <geometry>
                    <box size="0.001 0.001 0.001"/>
                </geometry>
            <origin rpy="0 0 0" xyz="0 0 0"/>
        </visual>
    </link>
    <joint name="base_footprint_joint" type="fixed">
        <origin xyz="0 0 0" />
        <parent link="base_footprint" />
        <child link="base_link" />
    </joint>
  <link name="base_link">
    <inertial>
      <origin
        xyz="0 0 5"
        rpy="0 0 0" />
      <mass
        value="0.1" />
      <inertia
        ixx="0.00265370284480665"
        ixy="-1.82350288041465E-19"
        ixz="-0.00144065197407825"
        iyy="0.0257376544776968"
        iyz="-9.25715958430322E-21"
        izz="0.0257584221294946" />
    </inertial>
    <!--visual>
      <origin
        xyz="0 0 0"
        rpy="0 0 0" />
      <geometry>
        <mesh
          filename="package://asm_car_asm/meshes/kinect_v2.stl" />
      </geometry>
      <material
        name="">
        <color
          rgba="0.149019607843137 0.517647058823529 0 1" />
      </material>
    </visual-->
  </link>
  <!-- camera -->
  <gazebo reference="base_link">
    <sensor type="camera" name="fly_camera">
      <update_rate>30.0</update_rate>
      <camera name="head">
        <horizontal_fov>1.3962634</horizontal_fov>
        <image>
          <width>640</width>
          <height>480</height>
          <format>R8G8B8</format>
        </image>
        <clip>
          <near>0.05</near>
          <far>300</far>
        </clip>
        <noise>
          <type>gaussian</type>
          <!-- Noise is sampled independently per pixel on each frame.
               That pixel's noise value is added to each of its color
               channels, which at that point lie in the range [0,1]. -->
          <mean>0.0</mean>
          <stddev>0.007</stddev>
        </noise>
      </camera>
      <plugin name="camera_controller" filename="libgazebo_ros_camera.so">
        <alwaysOn>true</alwaysOn>
        <updateRate>0.0</updateRate>
        <cameraName>fly_camera</cameraName>
        <imageTopicName>fly_image_raw</imageTopicName>
        <cameraInfoTopicName>fly_camera_info</cameraInfoTopicName>
        <frameName>base_link</frameName>
        <hackBaseline>0.07</hackBaseline>
        <distortionK1>0.0</distortionK1>
        <distortionK2>0.0</distortionK2>
        <distortionK3>0.0</distortionK3>
        <distortionT1>0.0</distortionT1>
        <distortionT2>0.0</distortionT2>
      </plugin>
    </sensor>
    <kinematic>1</kinematic>
    <material>Gazebo/Black</material>
  </gazebo>
  <gazebo>
	  <plugin name="p3d_base_controller" filename="libgazebo_ros_p3d.so">
	    <alwaysOn>true</alwaysOn>
	    <updateRate>50.0</updateRate>
	    <bodyName>base_link</bodyName>
	    <topicName>ground_truth/fly_camera_state</topicName>
	    <gaussianNoise>0.00</gaussianNoise>
	    <frameName>world</frameName>
	    <xyzOffsets>0 0 0</xyzOffsets>
	    <rpyOffsets>0 0 0</rpyOffsets>
	  </plugin>
  </gazebo>
</robot>
